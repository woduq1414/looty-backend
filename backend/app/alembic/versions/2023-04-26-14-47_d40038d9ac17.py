"""empty message

Revision ID: d40038d9ac17
Revises: a1e04c231eb7
Create Date: 2023-04-26 14:47:49.911487

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
import sqlmodel # added


# revision identifiers, used by Alembic.
revision = 'd40038d9ac17'
down_revision = 'a1e04c231eb7'
branch_labels = None
depends_on = None


def upgrade():
    op.execute("CREATE EXTENSION IF NOT EXISTS pg_trgm") 
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Purchase',
    sa.Column('product_info', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('status_log', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Purchase_id'), 'Purchase', ['id'], unique=False)
    op.create_table('Project',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('pre_content', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('final_content', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('leader_user_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['leader_user_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Project_id'), 'Project', ['id'], unique=False)
    op.create_index(op.f('ix_Project_title'), 'Project', ['title'], unique=False)
    op.create_table('LinkProjectUser',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('project_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['Project.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id', 'project_id', 'user_id')
    )
    op.create_index(op.f('ix_LinkProjectUser_id'), 'LinkProjectUser', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_LinkProjectUser_id'), table_name='LinkProjectUser')
    op.drop_table('LinkProjectUser')
    op.drop_index(op.f('ix_Project_title'), table_name='Project')
    op.drop_index(op.f('ix_Project_id'), table_name='Project')
    op.drop_table('Project')
    op.drop_index(op.f('ix_Purchase_id'), table_name='Purchase')
    op.drop_table('Purchase')
    # ### end Alembic commands ###
